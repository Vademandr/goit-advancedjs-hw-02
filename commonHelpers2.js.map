{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst date = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst min = document.querySelector('[data-minutes]');\nconst sec = document.querySelector('[data-seconds]');\nconst spans = document.querySelectorAll('.value');\n\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] <= Date.now()) {\n      startBtn.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        color: '#ff0000',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', onStartEvent);\n\nfunction onStartEvent() {\n  spans.forEach(item => item.classList.toggle('end'));\n  startBtn.disabled = true;\n  date.disabled = true;\n  timerId = setInterval(() => {\n    const chosenDate = new Date(date.value);\n    const timeToFinish = chosenDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(timeToFinish);\n\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    min.textContent = addLeadingZero(minutes);\n    sec.textContent = addLeadingZero(seconds);\n\n    if (timeToFinish < 1000) {\n      spans.forEach(item => item.classList.toggle('end'));\n      clearInterval(timerId);\n      date.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}"],"names":["date","startBtn","day","hour","min","sec","spans","timerId","options","selectedDates","iziToast","flatpickr","onStartEvent","item","timeToFinish","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAQ,SAAS,iBAAiB,QAAQ,EAEhD,IAAIC,EAAU,KAEdN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EACxBA,EAAc,IAAM,KAAK,IAAG,GAC9BR,EAAS,SAAW,GACpBS,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,SAAU,WACV,MAAO,SACf,CAAO,GAEDT,EAAS,SAAW,EAEvB,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErCP,EAAS,iBAAiB,QAASW,CAAY,EAE/C,SAASA,GAAe,CACtBN,EAAM,QAAQO,GAAQA,EAAK,UAAU,OAAO,KAAK,CAAC,EAClDZ,EAAS,SAAW,GACpBD,EAAK,SAAW,GAChBO,EAAU,YAAY,IAAM,CAE1B,MAAMO,EADa,IAAI,KAAKd,EAAK,KAAK,EACJ,KAAK,IAAG,EACpC,CAAE,KAAAe,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAY,EAEhEZ,EAAI,YAAckB,EAAeL,CAAI,EACrCZ,EAAK,YAAciB,EAAeJ,CAAK,EACvCZ,EAAI,YAAcgB,EAAeH,CAAO,EACxCZ,EAAI,YAAce,EAAeF,CAAO,EAEpCJ,EAAe,MACjBR,EAAM,QAAQO,GAAQA,EAAK,UAAU,OAAO,KAAK,CAAC,EAClD,cAAcN,CAAO,EACrBP,EAAK,SAAW,GAEnB,EAAE,GAAI,CACT,CAEA,SAASmB,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,MAAO,GAAGA,IAAQ,SAAS,EAAG,GAAG,CACnC"}